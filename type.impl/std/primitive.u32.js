(function() {
    var type_impls = Object.fromEntries([["input",[]],["smithay",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Coordinate-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/smithay/utils/geometry.rs.html#140-146\">Source</a><a href=\"#impl-Coordinate-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"smithay/utils/trait.Coordinate.html\" title=\"trait smithay::utils::Coordinate\">Coordinate</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/smithay/utils/geometry.rs.html#140-146\">Source</a><a href=\"#associatedconstant.ZERO\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"smithay/utils/trait.Coordinate.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a> = 0u32</h4></section></summary><div class='docblock'>A Coordinate that is 0</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downscale\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smithay/utils/geometry.rs.html#140-146\">Source</a><a href=\"#method.downscale\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"smithay/utils/trait.Coordinate.html#tymethod.downscale\" class=\"fn\">downscale</a>(self, scale: Self) -&gt; Self</h4></section></summary><div class='docblock'>Downscale the coordinate</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.upscale\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smithay/utils/geometry.rs.html#140-146\">Source</a><a href=\"#method.upscale\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"smithay/utils/trait.Coordinate.html#tymethod.upscale\" class=\"fn\">upscale</a>(self, scale: Self) -&gt; Self</h4></section></summary><div class='docblock'>Upscale the coordinate</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smithay/utils/geometry.rs.html#140-146\">Source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"smithay/utils/trait.Coordinate.html#tymethod.to_f64\" class=\"fn\">to_f64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Convert the coordinate to a f64</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smithay/utils/geometry.rs.html#140-146\">Source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"smithay/utils/trait.Coordinate.html#tymethod.from_f64\" class=\"fn\">from_f64</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Convert to this coordinate from a f64</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.non_negative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smithay/utils/geometry.rs.html#140-146\">Source</a><a href=\"#method.non_negative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"smithay/utils/trait.Coordinate.html#tymethod.non_negative\" class=\"fn\">non_negative</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Test if the coordinate is not negative</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smithay/utils/geometry.rs.html#140-146\">Source</a><a href=\"#method.abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"smithay/utils/trait.Coordinate.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the absolute value of this coordinate</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smithay/utils/geometry.rs.html#140-146\">Source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"smithay/utils/trait.Coordinate.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating integer addition. Computes self + other, saturating at the numeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smithay/utils/geometry.rs.html#140-146\">Source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"smithay/utils/trait.Coordinate.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating integer subtraction. Computes self - other, saturating at the numeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smithay/utils/geometry.rs.html#140-146\">Source</a><a href=\"#method.saturating_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"smithay/utils/trait.Coordinate.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Saturating integer multiplication. Computes self * other, saturating at the numeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smithay/utils/geometry.rs.html#48-54\">Source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"smithay/utils/trait.Coordinate.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Compare and return the smaller one</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smithay/utils/geometry.rs.html#57-63\">Source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"smithay/utils/trait.Coordinate.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Compare and return the larger one</div></details></div></details>","Coordinate","smithay::input::keyboard::xkb::CompileFlags","smithay::input::keyboard::xkb::Format","smithay::input::keyboard::xkb::StateFlags","smithay::input::keyboard::xkb::ffi::xkb_keycode_t","smithay::input::keyboard::xkb::ffi::xkb_keysym_t","smithay::input::keyboard::xkb::ffi::xkb_layout_index_t","smithay::input::keyboard::xkb::ffi::xkb_layout_mask_t","smithay::input::keyboard::xkb::ffi::xkb_level_index_t","smithay::input::keyboard::xkb::ffi::xkb_mod_index_t","smithay::input::keyboard::xkb::ffi::xkb_mod_mask_t","smithay::input::keyboard::xkb::ffi::xkb_led_index_t","smithay::input::keyboard::xkb::ffi::xkb_led_mask_t","smithay::input::keyboard::xkb::ffi::xkb_keysym_flags","smithay::input::keyboard::xkb::ffi::xkb_context_flags","smithay::input::keyboard::xkb::ffi::xkb_keymap_compile_flags","smithay::input::keyboard::xkb::ffi::xkb_keymap_format","smithay::input::keyboard::xkb::ffi::xkb_state_component","smithay::input::keyboard::xkb::ffi::xkb_state_match","smithay::input::keyboard::xkb::ffi::compose::xkb_compose_compile_flags","smithay::input::keyboard::xkb::ffi::compose::xkb_compose_format","smithay::input::keyboard::xkb::ffi::compose::xkb_compose_state_flags","smithay::input::keyboard::xkb::ffi::compose::xkb_compose_status","smithay::input::keyboard::xkb::ffi::compose::xkb_compose_feed_result","smithay::input::keyboard::xkb::LayoutIndex","smithay::input::keyboard::xkb::LayoutMask","smithay::input::keyboard::xkb::LevelIndex","smithay::input::keyboard::xkb::ModIndex","smithay::input::keyboard::xkb::ModMask","smithay::input::keyboard::xkb::LedIndex","smithay::input::keyboard::xkb::LedMask","smithay::input::keyboard::xkb::KeysymFlags","smithay::input::keyboard::xkb::ContextFlags","smithay::input::keyboard::xkb::KeymapCompileFlags","smithay::input::keyboard::xkb::KeymapFormat","smithay::input::keyboard::xkb::StateComponent","smithay::input::keyboard::xkb::StateMatch","smithay::xwayland::xwm::X11Window"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSerial%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/smithay/utils/serial.rs.html#42-47\">Source</a><a href=\"#impl-From%3CSerial%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"smithay/utils/struct.Serial.html\" title=\"struct smithay::utils::Serial\">Serial</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smithay/utils/serial.rs.html#44-46\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(serial: <a class=\"struct\" href=\"smithay/utils/struct.Serial.html\" title=\"struct smithay::utils::Serial\">Serial</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Serial>","smithay::input::keyboard::xkb::CompileFlags","smithay::input::keyboard::xkb::Format","smithay::input::keyboard::xkb::StateFlags","smithay::input::keyboard::xkb::ffi::xkb_keycode_t","smithay::input::keyboard::xkb::ffi::xkb_keysym_t","smithay::input::keyboard::xkb::ffi::xkb_layout_index_t","smithay::input::keyboard::xkb::ffi::xkb_layout_mask_t","smithay::input::keyboard::xkb::ffi::xkb_level_index_t","smithay::input::keyboard::xkb::ffi::xkb_mod_index_t","smithay::input::keyboard::xkb::ffi::xkb_mod_mask_t","smithay::input::keyboard::xkb::ffi::xkb_led_index_t","smithay::input::keyboard::xkb::ffi::xkb_led_mask_t","smithay::input::keyboard::xkb::ffi::xkb_keysym_flags","smithay::input::keyboard::xkb::ffi::xkb_context_flags","smithay::input::keyboard::xkb::ffi::xkb_keymap_compile_flags","smithay::input::keyboard::xkb::ffi::xkb_keymap_format","smithay::input::keyboard::xkb::ffi::xkb_state_component","smithay::input::keyboard::xkb::ffi::xkb_state_match","smithay::input::keyboard::xkb::ffi::compose::xkb_compose_compile_flags","smithay::input::keyboard::xkb::ffi::compose::xkb_compose_format","smithay::input::keyboard::xkb::ffi::compose::xkb_compose_state_flags","smithay::input::keyboard::xkb::ffi::compose::xkb_compose_status","smithay::input::keyboard::xkb::ffi::compose::xkb_compose_feed_result","smithay::input::keyboard::xkb::LayoutIndex","smithay::input::keyboard::xkb::LayoutMask","smithay::input::keyboard::xkb::LevelIndex","smithay::input::keyboard::xkb::ModIndex","smithay::input::keyboard::xkb::ModMask","smithay::input::keyboard::xkb::LedIndex","smithay::input::keyboard::xkb::LedMask","smithay::input::keyboard::xkb::KeysymFlags","smithay::input::keyboard::xkb::ContextFlags","smithay::input::keyboard::xkb::KeymapCompileFlags","smithay::input::keyboard::xkb::KeymapFormat","smithay::input::keyboard::xkb::StateComponent","smithay::input::keyboard::xkb::StateMatch","smithay::xwayland::xwm::X11Window"]]],["winit",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pixel-for-u32\" class=\"impl\"><a href=\"#impl-Pixel-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winit/dpi/trait.Pixel.html\" title=\"trait winit::dpi::Pixel\">Pixel</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_f64\" class=\"method trait-impl\"><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winit/dpi/trait.Pixel.html#tymethod.from_f64\" class=\"fn\">from_f64</a>(f: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.cast\" class=\"method trait-impl\"><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winit/dpi/trait.Pixel.html#method.cast\" class=\"fn\">cast</a>&lt;P&gt;(self) -&gt; P<div class=\"where\">where\n    P: <a class=\"trait\" href=\"winit/dpi/trait.Pixel.html\" title=\"trait winit::dpi::Pixel\">Pixel</a>,</div></h4></section></div></details>","Pixel","winit::event::AxisId","winit::event::ButtonId","winit::platform::x11::XVisualID","winit::platform::x11::XWindow"]]],["x11rb",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-u32\" class=\"impl\"><a href=\"#impl-Serialize-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"x11rb/x11_utils/trait.Serialize.html\" title=\"trait x11rb::x11_utils::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"x11rb/x11_utils/trait.Serialize.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>The value returned by <code>serialize</code>. <a href=\"x11rb/x11_utils/trait.Serialize.html#associatedtype.Bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/x11_utils/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"x11rb/x11_utils/trait.Serialize.html\" title=\"trait x11rb::x11_utils::Serialize\">Serialize</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/x11_utils/trait.Serialize.html#associatedtype.Bytes\" title=\"type x11rb::x11_utils::Serialize::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_into\" class=\"method trait-impl\"><a href=\"#method.serialize_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/x11_utils/trait.Serialize.html#tymethod.serialize_into\" class=\"fn\">serialize_into</a>(&amp;self, bytes: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes, appending the result into <code>bytes</code>. <a href=\"x11rb/x11_utils/trait.Serialize.html#tymethod.serialize_into\">Read more</a></div></details></div></details>","Serialize","x11rb::protocol::xproto::Window","x11rb::protocol::xproto::Pixmap","x11rb::protocol::xproto::Cursor","x11rb::protocol::xproto::Font","x11rb::protocol::xproto::Gcontext","x11rb::protocol::xproto::Colormap","x11rb::protocol::xproto::Atom","x11rb::protocol::xproto::Drawable","x11rb::protocol::xproto::Fontable","x11rb::protocol::xproto::Bool32","x11rb::protocol::xproto::Visualid","x11rb::protocol::xproto::Timestamp","x11rb::protocol::xproto::Keysym","x11rb::protocol::xproto::Keycode32","x11rb::protocol::dri3::Syncobj","x11rb::protocol::present::Event","x11rb::protocol::randr::Mode","x11rb::protocol::randr::Crtc","x11rb::protocol::randr::Output","x11rb::protocol::randr::Provider","x11rb::protocol::randr::Lease","x11rb::protocol::render::Glyph","x11rb::protocol::render::Glyphset","x11rb::protocol::render::Picture","x11rb::protocol::render::Pictformat","x11rb::protocol::sync::Alarm","x11rb::protocol::sync::Counter","x11rb::protocol::sync::Fence","x11rb::protocol::xfixes::Region","x11rb::protocol::xfixes::Barrier","x11rb::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryParse-for-u32\" class=\"impl\"><a href=\"#impl-TryParse-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"x11rb/x11_utils/trait.TryParse.html\" title=\"trait x11rb::x11_utils::TryParse\">TryParse</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_parse\" class=\"method trait-impl\"><a href=\"#method.try_parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/x11_utils/trait.TryParse.html#tymethod.try_parse\" class=\"fn\">try_parse</a>(value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]), <a class=\"enum\" href=\"x11rb/xcb_ffi/enum.ParseError.html\" title=\"enum x11rb::xcb_ffi::ParseError\">ParseError</a>&gt;</h4></section></summary><div class='docblock'>Try to parse the given values into an instance of this type. <a href=\"x11rb/x11_utils/trait.TryParse.html#tymethod.try_parse\">Read more</a></div></details></div></details>","TryParse","x11rb::protocol::xproto::Window","x11rb::protocol::xproto::Pixmap","x11rb::protocol::xproto::Cursor","x11rb::protocol::xproto::Font","x11rb::protocol::xproto::Gcontext","x11rb::protocol::xproto::Colormap","x11rb::protocol::xproto::Atom","x11rb::protocol::xproto::Drawable","x11rb::protocol::xproto::Fontable","x11rb::protocol::xproto::Bool32","x11rb::protocol::xproto::Visualid","x11rb::protocol::xproto::Timestamp","x11rb::protocol::xproto::Keysym","x11rb::protocol::xproto::Keycode32","x11rb::protocol::dri3::Syncobj","x11rb::protocol::present::Event","x11rb::protocol::randr::Mode","x11rb::protocol::randr::Crtc","x11rb::protocol::randr::Output","x11rb::protocol::randr::Provider","x11rb::protocol::randr::Lease","x11rb::protocol::render::Glyph","x11rb::protocol::render::Glyphset","x11rb::protocol::render::Picture","x11rb::protocol::render::Pictformat","x11rb::protocol::sync::Alarm","x11rb::protocol::sync::Counter","x11rb::protocol::sync::Fence","x11rb::protocol::xfixes::Region","x11rb::protocol::xfixes::Barrier","x11rb::protocol::xinput::EventClass"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[12,12492,1426,6525]}